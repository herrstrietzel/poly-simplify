function t(t,e=!1){let r=0;for(let e=0,n=t.length;n&&e<n;e++){r+=t[e].x*t[e===t.length-1?0:e+1].y*.5-t[e===t.length-1?0:e+1].x*t[e].y*.5}return e?Math.abs(r):r}function e(e,{tolerance:n=.5,useRDP:a=!1,decimals:i=-1,output:l="points",meta:o=!1}={}){const y=(e,r="points",n,a=!1)=>{let i=e.length,l=a?t(n):0,o=a?t(e):0,y=+(100-o/l*100).toFixed(3);if("pointstring"!==r&&"string"!==r||(e=e.map((t=>`${t.x} ${t.y}`)).join(" ")),"path"!==r&&"d"!==r||(e="M"+e.map((t=>`${t.x} ${t.y}`)).join(" ")),"pathData"===r||"pathdata"===r){let t=[{type:"M",values:[e[0].x,e[0].y]},...e.slice(1).map((t=>({type:"L",values:[t.x,t.y]})))];e=t}return"json"===r.toLowerCase()&&(e=JSON.stringify(e)),{data:e,count:i,original:n.length,areaOriginal:l,areaSimplified:o,areaDiff:y}};let p=y(e=function(t){let e=t[0].x||!1,r=e&&"object"==typeof t[0]?t[0].constructor.name?t[0].constructor.name:"object":null;if(e&&"object"!==r&&(t=[...t].map((t=>({x:t.x,y:t.y})))),e)return t;let n="string"==typeof t;if(n&&t.startsWith('[{"x":'))return JSON.parse(t);if(n&&(t=t.trim().split(/,| /).filter(Boolean).map(Number)).filter((t=>isNaN(t))).length)return console.warn("input doesn't contain point data â€“ please, check your input structure for syntax errors"),[];return Array.isArray(t)&&2===t[0].length&&(t=t.map((t=>({x:t[0],y:t[1]})))),!Array.isArray(t[0])&&!t[0].hasOwnProperty("x")&&(t=(t=>{let e=[];for(let r=1,n=t.length;r<n;r+=2)e.push({x:t[r-1],y:t[r]});return e})(t)),t}(e),l,e,o);if(e.length<=2||0===n)return o?p:p.data;let u=e[0],x=[u];for(let r=2,n=e.length;r<n;r++){let n=e[r-1],a=e[r],i=0;if(u.x===n.x&&u.y!==n.y||u.x!==n.x&&u.y===n.y)a.x===n.x&&a.y!==n.y||a.x!==n.x&&a.y===n.y||x.push(n),u=n;else{if(!(u.x===n.x&&u.y===n.y||u.x===n.x&&u.y!==n.y||u.x!==n.x&&u.y===n.y)){s=n,i=((h=a).x-s.x)**2+(h.y-s.y)**2;let e=t([u,n,a],!0);!e||(!i||e<.01*i)||x.push(n)}u=n}}var s,h;if(a){x=r(x,n)}return i>-1&&(x=x.map((t=>({x:+t.x.toFixed(i),y:+t.y.toFixed(i)})))),p=y(x,l,e,o),console.log("data",p),o?p:p.data}function r(t,e=.5){if(t.length<=2)return t;let r=function(t,e=48){if(!Array.isArray(t)||t.length<=e)return t;let r=t.length,n=r/e,a=[];for(let r=0;r<e;r++)a.push(t[Math.floor(r*n)]);let i=a.length;return a[i-1]!==t[r-1]&&(a[i-1]=t[r-1]),a}(t),{width:n,height:a}=function(t){let e=t.map((t=>t.x)),r=t.map((t=>t.y)),n=Math.min(...e),a=Math.max(...e),i=Math.min(...r),l=Math.max(...r);return{x:n,left:n,right:a,y:i,top:i,bottom:l,width:a-n,height:l-i}}(r),i=(n+a)/2;e/=i<=10?1e5/i:1;const l=(t,e,r)=>{let n=e.x,a=e.y,i=r.x-n,l=r.y-a;if(0!==i||0!==l){let e=((t.x-n)*i+(t.y-a)*l)/(i*i+l*l);e>1?(n=r.x,a=r.y):e>0&&(n+=i*e,a+=l*e)}return(t.x-n)**2+(t.y-a)**2};let o=[t[0]],y=[];for(y.push([0,t.length-1]);y.length>0;){let[r,n]=y.pop(),a=e,i=-1;for(let e=r+1;e<n;e++){let o=l(t[e],t[r],t[n]);o>a&&(i=e,a=o)}a>e?(y.push([i,n]),y.push([r,i])):o.push(t[n])}return o}"undefined"!=typeof window&&(window.polySimplify=e);export{e as polySimplify,r as simplifyPolyRDP};
