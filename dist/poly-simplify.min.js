!function(t){"use strict";function e(t,e){return(e.x-t.x)**2+(e.y-t.y)**2}function n(t,e=48){if(!Array.isArray(t)||t.length<=e)return t;let n=t.length,r=n/e,l=[];for(let n=0;n<e;n++)l.push(t[Math.floor(n*r)]);let i=l.length;return l[i-1]!==t[n-1]&&(l[i-1]=t[n-1]),l}function r(t,e=!1){let n=0;for(let e=0,r=t.length;r&&e<r;e++){n+=t[e].x*t[e===t.length-1?0:e+1].y*.5-t[e===t.length-1?0:e+1].x*t[e].y*.5}return e?Math.abs(n):n}function l(t,{tolerance:l=.5,useRDP:a=!0,decimals:s=-1,maxVertices:y=1/0,useMax:u=!1,output:p="points",meta:h=!1}={}){let f=[];const x=(t,e="points",n,l=!1)=>{let i=t.length,o=l?r(n,!0):0,a=l?r(t,!0):0,s=l?+(100/a*Math.abs(o-a)).toFixed(3):0;if("pointstring"!==e&&"string"!==e||(t=t.map((t=>`${t.x} ${t.y}`)).join(" ")),"path"!==e&&"d"!==e||(t="M"+t.map((t=>`${t.x} ${t.y}`)).join(" ")),"pathData"===e||"pathdata"===e){let e=[{type:"M",values:[t[0].x,t[0].y]},...t.slice(1).map((t=>({type:"L",values:[t.x,t.y]})))];t=e}return"json"===e.toLowerCase()&&(t=JSON.stringify(t)),{data:t,count:i,original:n.length,areaOriginal:o,areaptsSmp:a,areaDiff:s}};let c=x(t=function(t){let e=t[0].x||!1,n=e&&"object"==typeof t[0]?t[0].constructor.name?t[0].constructor.name:"object":null;if(e&&"object"!==n&&(t=[...t].map((t=>({x:t.x,y:t.y})))),e)return t;let r="string"==typeof t;if(r&&t.startsWith('[{"x":'))return JSON.parse(t);if(r&&(t=t.trim().split(/,| /).filter(Boolean).map(Number)).filter((t=>isNaN(t))).length)return console.warn("input doesn't contain point data â€“ please, check your input structure for syntax errors"),[];return Array.isArray(t)&&2===t[0].length&&(t=t.map((t=>({x:t[0],y:t[1]})))),!Array.isArray(t[0])&&!t[0].hasOwnProperty("x")&&(t=(t=>{let e=[];for(let n=1,r=t.length;n<r;n+=2)e.push({x:t[n-1],y:t[n]});return e})(t)),t}(t),p,t,h);if(t.length<=2||0===l)return h?c:c.data;if(u&&y<1/0)return f=n(t,y),c=x(f,p,t,h),c;f=i(t);let m=function(t){let n=e(t[0],t[1]);for(let r=3,l=t.length;r<l;r++){let l=e(t[r-1],t[r]);if(100/n*Math.abs(n-l)>.1)return!1;n=l}return!0}(f);return m&&(a=!1),a&&(f=o(f,l)),s>-1&&(f=f.map((t=>({x:+t.x.toFixed(s),y:+t.y.toFixed(s)})))),c=x(f,p,t,h),console.log("data",c),h?c:c.data}function i(t){let n=t[0],l=[n];for(let i=2,o=t.length;i<o;i++){let o=t[i-1],a=t[i],s=0;if(n.x===o.x&&n.y!==o.y||n.x!==o.x&&n.y===o.y)a.x===o.x&&a.y!==o.y||a.x!==o.x&&a.y===o.y||l.push(o),n=o;else{if(!(n.x===o.x&&n.y===o.y||n.x===o.x&&n.y!==o.y||n.x!==o.x&&n.y===o.y)){s=e(o,a);let t=r([n,o,a],!0);!t||(!s||t<.01*s)||l.push(o)}n=o}}return l}function o(t,e=.5){if(t.length<=2)return t;let r=n(t,32),{width:l,height:i}=function(t){let e=t.map((t=>t.x)),n=t.map((t=>t.y)),r=Math.min(...e),l=Math.max(...e),i=Math.min(...n),o=Math.max(...n);return{x:r,left:r,right:l,y:i,top:i,bottom:o,width:l-r,height:o-i}}(r),o=5e4/Math.max(l,i)**2;e/=o,console.log("scale",o,e);const a=(t,e,n)=>{let r=e.x,l=e.y,i=n.x-r,o=n.y-l;if(0!==i||0!==o){let e=((t.x-r)*i+(t.y-l)*o)/(i*i+o*o);e>1?(r=n.x,l=n.y):e>0&&(r+=i*e,l+=o*e)}return(t.x-r)**2+(t.y-l)**2};let s=[t[0]],y=[];for(y.push([0,t.length-1]);y.length>0;){let[n,r]=y.pop(),l=e,i=-1;for(let e=n+1;e<r;e++){let o=a(t[e],t[n],t[r]);o>l&&(i=e,l=o)}l>e?(y.push([i,r]),y.push([n,i])):s.push(t[r])}return s}"undefined"!=typeof window&&(window.polySimplify=l),t.polySimplify=l,t.simplifyPolyLossless=i,t.simplifyPolyRDP=o}(this["poly-simplify"]=this["poly-simplify"]||{});
